/**
 * Locationforecast
 * Weather forecast for a specified place
 *
 * The version of the OpenAPI document: 2.0
 * Contact: weatherapi-adm@met.no
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package no.hvl.dat153.forecastfetcher.data;

import no.hvl.dat153.forecastfetcher.data.ForecastTimeStepDataInstant;
import no.hvl.dat153.forecastfetcher.data.ForecastTimeStepDataNext12Hours;
import no.hvl.dat153.forecastfetcher.data.ForecastTimeStepDataNext1Hours;
import no.hvl.dat153.forecastfetcher.data.ForecastTimeStepDataNext6Hours;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Forecast for a specific time
 **/
@ApiModel(description = "Forecast for a specific time")
public class ForecastTimeStepData {
  
  @SerializedName("instant")
  private ForecastTimeStepDataInstant instant = null;
  @SerializedName("next_12_hours")
  private ForecastTimeStepDataNext12Hours next12Hours = null;
  @SerializedName("next_1_hours")
  private ForecastTimeStepDataNext1Hours next1Hours = null;
  @SerializedName("next_6_hours")
  private ForecastTimeStepDataNext6Hours next6Hours = null;

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public ForecastTimeStepDataInstant getInstant() {
    return instant;
  }
  public void setInstant(ForecastTimeStepDataInstant instant) {
    this.instant = instant;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ForecastTimeStepDataNext12Hours getNext12Hours() {
    return next12Hours;
  }
  public void setNext12Hours(ForecastTimeStepDataNext12Hours next12Hours) {
    this.next12Hours = next12Hours;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ForecastTimeStepDataNext1Hours getNext1Hours() {
    return next1Hours;
  }
  public void setNext1Hours(ForecastTimeStepDataNext1Hours next1Hours) {
    this.next1Hours = next1Hours;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ForecastTimeStepDataNext6Hours getNext6Hours() {
    return next6Hours;
  }
  public void setNext6Hours(ForecastTimeStepDataNext6Hours next6Hours) {
    this.next6Hours = next6Hours;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ForecastTimeStepData forecastTimeStepData = (ForecastTimeStepData) o;
    return (this.instant == null ? forecastTimeStepData.instant == null : this.instant.equals(forecastTimeStepData.instant)) &&
        (this.next12Hours == null ? forecastTimeStepData.next12Hours == null : this.next12Hours.equals(forecastTimeStepData.next12Hours)) &&
        (this.next1Hours == null ? forecastTimeStepData.next1Hours == null : this.next1Hours.equals(forecastTimeStepData.next1Hours)) &&
        (this.next6Hours == null ? forecastTimeStepData.next6Hours == null : this.next6Hours.equals(forecastTimeStepData.next6Hours));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.instant == null ? 0: this.instant.hashCode());
    result = 31 * result + (this.next12Hours == null ? 0: this.next12Hours.hashCode());
    result = 31 * result + (this.next1Hours == null ? 0: this.next1Hours.hashCode());
    result = 31 * result + (this.next6Hours == null ? 0: this.next6Hours.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class ForecastTimeStepData {\n");
    
    sb.append("  instant: ").append(instant).append("\n");
    sb.append("  next12Hours: ").append(next12Hours).append("\n");
    sb.append("  next1Hours: ").append(next1Hours).append("\n");
    sb.append("  next6Hours: ").append(next6Hours).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
