/**
 * Locationforecast
 * Weather forecast for a specified place
 *
 * The version of the OpenAPI document: 2.0
 * Contact: weatherapi-adm@met.no
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package no.hvl.dat153.forecastfetcher.data;

import java.math.BigDecimal;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Weather parameters valid for a specific point in time.
 **/
@ApiModel(description = "Weather parameters valid for a specific point in time.")
public class ForecastTimeInstant {
  
  @SerializedName("air_pressure_at_sea_level")
  private BigDecimal airPressureAtSeaLevel = null;
  @SerializedName("air_temperature")
  private BigDecimal airTemperature = null;
  @SerializedName("cloud_area_fraction")
  private BigDecimal cloudAreaFraction = null;
  @SerializedName("cloud_area_fraction_high")
  private BigDecimal cloudAreaFractionHigh = null;
  @SerializedName("cloud_area_fraction_low")
  private BigDecimal cloudAreaFractionLow = null;
  @SerializedName("cloud_area_fraction_medium")
  private BigDecimal cloudAreaFractionMedium = null;
  @SerializedName("dew_point_temperature")
  private BigDecimal dewPointTemperature = null;
  @SerializedName("fog_area_fraction")
  private BigDecimal fogAreaFraction = null;
  @SerializedName("relative_humidity")
  private BigDecimal relativeHumidity = null;
  @SerializedName("wind_from_direction")
  private BigDecimal windFromDirection = null;
  @SerializedName("wind_speed")
  private BigDecimal windSpeed = null;
  @SerializedName("wind_speed_of_gust")
  private BigDecimal windSpeedOfGust = null;

  /**
   * Air pressure at sea level
   **/
  @ApiModelProperty(value = "Air pressure at sea level")
  public BigDecimal getAirPressureAtSeaLevel() {
    return airPressureAtSeaLevel;
  }
  public void setAirPressureAtSeaLevel(BigDecimal airPressureAtSeaLevel) {
    this.airPressureAtSeaLevel = airPressureAtSeaLevel;
  }

  /**
   * Air temperature
   **/
  @ApiModelProperty(value = "Air temperature")
  public BigDecimal getAirTemperature() {
    return airTemperature;
  }
  public void setAirTemperature(BigDecimal airTemperature) {
    this.airTemperature = airTemperature;
  }

  /**
   * Amount of sky covered by clouds.
   **/
  @ApiModelProperty(value = "Amount of sky covered by clouds.")
  public BigDecimal getCloudAreaFraction() {
    return cloudAreaFraction;
  }
  public void setCloudAreaFraction(BigDecimal cloudAreaFraction) {
    this.cloudAreaFraction = cloudAreaFraction;
  }

  /**
   * Amount of sky covered by clouds at high elevation.
   **/
  @ApiModelProperty(value = "Amount of sky covered by clouds at high elevation.")
  public BigDecimal getCloudAreaFractionHigh() {
    return cloudAreaFractionHigh;
  }
  public void setCloudAreaFractionHigh(BigDecimal cloudAreaFractionHigh) {
    this.cloudAreaFractionHigh = cloudAreaFractionHigh;
  }

  /**
   * Amount of sky covered by clouds at low elevation.
   **/
  @ApiModelProperty(value = "Amount of sky covered by clouds at low elevation.")
  public BigDecimal getCloudAreaFractionLow() {
    return cloudAreaFractionLow;
  }
  public void setCloudAreaFractionLow(BigDecimal cloudAreaFractionLow) {
    this.cloudAreaFractionLow = cloudAreaFractionLow;
  }

  /**
   * Amount of sky covered by clouds at medium elevation.
   **/
  @ApiModelProperty(value = "Amount of sky covered by clouds at medium elevation.")
  public BigDecimal getCloudAreaFractionMedium() {
    return cloudAreaFractionMedium;
  }
  public void setCloudAreaFractionMedium(BigDecimal cloudAreaFractionMedium) {
    this.cloudAreaFractionMedium = cloudAreaFractionMedium;
  }

  /**
   * Dew point temperature at sea level
   **/
  @ApiModelProperty(value = "Dew point temperature at sea level")
  public BigDecimal getDewPointTemperature() {
    return dewPointTemperature;
  }
  public void setDewPointTemperature(BigDecimal dewPointTemperature) {
    this.dewPointTemperature = dewPointTemperature;
  }

  /**
   * Amount of area covered by fog.
   **/
  @ApiModelProperty(value = "Amount of area covered by fog.")
  public BigDecimal getFogAreaFraction() {
    return fogAreaFraction;
  }
  public void setFogAreaFraction(BigDecimal fogAreaFraction) {
    this.fogAreaFraction = fogAreaFraction;
  }

  /**
   * Amount of humidity in the air.
   **/
  @ApiModelProperty(value = "Amount of humidity in the air.")
  public BigDecimal getRelativeHumidity() {
    return relativeHumidity;
  }
  public void setRelativeHumidity(BigDecimal relativeHumidity) {
    this.relativeHumidity = relativeHumidity;
  }

  /**
   * The direction wind is coming from, in degrees clockwise from North
   **/
  @ApiModelProperty(value = "The direction wind is coming from, in degrees clockwise from North")
  public BigDecimal getWindFromDirection() {
    return windFromDirection;
  }
  public void setWindFromDirection(BigDecimal windFromDirection) {
    this.windFromDirection = windFromDirection;
  }

  /**
   * Speed of wind
   **/
  @ApiModelProperty(value = "Speed of wind")
  public BigDecimal getWindSpeed() {
    return windSpeed;
  }
  public void setWindSpeed(BigDecimal windSpeed) {
    this.windSpeed = windSpeed;
  }

  /**
   * Speed of wind gust
   **/
  @ApiModelProperty(value = "Speed of wind gust")
  public BigDecimal getWindSpeedOfGust() {
    return windSpeedOfGust;
  }
  public void setWindSpeedOfGust(BigDecimal windSpeedOfGust) {
    this.windSpeedOfGust = windSpeedOfGust;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ForecastTimeInstant forecastTimeInstant = (ForecastTimeInstant) o;
    return (this.airPressureAtSeaLevel == null ? forecastTimeInstant.airPressureAtSeaLevel == null : this.airPressureAtSeaLevel.equals(forecastTimeInstant.airPressureAtSeaLevel)) &&
        (this.airTemperature == null ? forecastTimeInstant.airTemperature == null : this.airTemperature.equals(forecastTimeInstant.airTemperature)) &&
        (this.cloudAreaFraction == null ? forecastTimeInstant.cloudAreaFraction == null : this.cloudAreaFraction.equals(forecastTimeInstant.cloudAreaFraction)) &&
        (this.cloudAreaFractionHigh == null ? forecastTimeInstant.cloudAreaFractionHigh == null : this.cloudAreaFractionHigh.equals(forecastTimeInstant.cloudAreaFractionHigh)) &&
        (this.cloudAreaFractionLow == null ? forecastTimeInstant.cloudAreaFractionLow == null : this.cloudAreaFractionLow.equals(forecastTimeInstant.cloudAreaFractionLow)) &&
        (this.cloudAreaFractionMedium == null ? forecastTimeInstant.cloudAreaFractionMedium == null : this.cloudAreaFractionMedium.equals(forecastTimeInstant.cloudAreaFractionMedium)) &&
        (this.dewPointTemperature == null ? forecastTimeInstant.dewPointTemperature == null : this.dewPointTemperature.equals(forecastTimeInstant.dewPointTemperature)) &&
        (this.fogAreaFraction == null ? forecastTimeInstant.fogAreaFraction == null : this.fogAreaFraction.equals(forecastTimeInstant.fogAreaFraction)) &&
        (this.relativeHumidity == null ? forecastTimeInstant.relativeHumidity == null : this.relativeHumidity.equals(forecastTimeInstant.relativeHumidity)) &&
        (this.windFromDirection == null ? forecastTimeInstant.windFromDirection == null : this.windFromDirection.equals(forecastTimeInstant.windFromDirection)) &&
        (this.windSpeed == null ? forecastTimeInstant.windSpeed == null : this.windSpeed.equals(forecastTimeInstant.windSpeed)) &&
        (this.windSpeedOfGust == null ? forecastTimeInstant.windSpeedOfGust == null : this.windSpeedOfGust.equals(forecastTimeInstant.windSpeedOfGust));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.airPressureAtSeaLevel == null ? 0: this.airPressureAtSeaLevel.hashCode());
    result = 31 * result + (this.airTemperature == null ? 0: this.airTemperature.hashCode());
    result = 31 * result + (this.cloudAreaFraction == null ? 0: this.cloudAreaFraction.hashCode());
    result = 31 * result + (this.cloudAreaFractionHigh == null ? 0: this.cloudAreaFractionHigh.hashCode());
    result = 31 * result + (this.cloudAreaFractionLow == null ? 0: this.cloudAreaFractionLow.hashCode());
    result = 31 * result + (this.cloudAreaFractionMedium == null ? 0: this.cloudAreaFractionMedium.hashCode());
    result = 31 * result + (this.dewPointTemperature == null ? 0: this.dewPointTemperature.hashCode());
    result = 31 * result + (this.fogAreaFraction == null ? 0: this.fogAreaFraction.hashCode());
    result = 31 * result + (this.relativeHumidity == null ? 0: this.relativeHumidity.hashCode());
    result = 31 * result + (this.windFromDirection == null ? 0: this.windFromDirection.hashCode());
    result = 31 * result + (this.windSpeed == null ? 0: this.windSpeed.hashCode());
    result = 31 * result + (this.windSpeedOfGust == null ? 0: this.windSpeedOfGust.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class ForecastTimeInstant {\n");
    
    sb.append("  airPressureAtSeaLevel: ").append(airPressureAtSeaLevel).append("\n");
    sb.append("  airTemperature: ").append(airTemperature).append("\n");
    sb.append("  cloudAreaFraction: ").append(cloudAreaFraction).append("\n");
    sb.append("  cloudAreaFractionHigh: ").append(cloudAreaFractionHigh).append("\n");
    sb.append("  cloudAreaFractionLow: ").append(cloudAreaFractionLow).append("\n");
    sb.append("  cloudAreaFractionMedium: ").append(cloudAreaFractionMedium).append("\n");
    sb.append("  dewPointTemperature: ").append(dewPointTemperature).append("\n");
    sb.append("  fogAreaFraction: ").append(fogAreaFraction).append("\n");
    sb.append("  relativeHumidity: ").append(relativeHumidity).append("\n");
    sb.append("  windFromDirection: ").append(windFromDirection).append("\n");
    sb.append("  windSpeed: ").append(windSpeed).append("\n");
    sb.append("  windSpeedOfGust: ").append(windSpeedOfGust).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
