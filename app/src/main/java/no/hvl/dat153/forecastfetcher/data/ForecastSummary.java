/**
 * Locationforecast
 * Weather forecast for a specified place
 *
 * The version of the OpenAPI document: 2.0
 * Contact: weatherapi-adm@met.no
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package no.hvl.dat153.forecastfetcher.data;

import no.hvl.dat153.forecastfetcher.data.WeatherSymbol;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Summary of weather conditions.
 **/
@ApiModel(description = "Summary of weather conditions.")
public class ForecastSummary {
  
  @SerializedName("symbol_code")
  private String symbolCode = null;

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public String getSymbolCode() {
    return symbolCode;
  }
  public void setSymbolCode(String symbolCode) {
    this.symbolCode = symbolCode;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ForecastSummary forecastSummary = (ForecastSummary) o;
    return (this.symbolCode == null ? forecastSummary.symbolCode == null : this.symbolCode.equals(forecastSummary.symbolCode));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.symbolCode == null ? 0: this.symbolCode.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class ForecastSummary {\n");
    
    sb.append("  symbolCode: ").append(symbolCode).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
