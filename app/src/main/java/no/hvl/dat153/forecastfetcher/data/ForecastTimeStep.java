/**
 * Locationforecast
 * Weather forecast for a specified place
 *
 * The version of the OpenAPI document: 2.0
 * Contact: weatherapi-adm@met.no
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package no.hvl.dat153.forecastfetcher.data;

import no.hvl.dat153.forecastfetcher.data.ForecastTimeStepData;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class ForecastTimeStep {
  
  @SerializedName("data")
  private ForecastTimeStepData data = null;
  @SerializedName("time")
  private String time = null;

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public ForecastTimeStepData getData() {
    return data;
  }
  public void setData(ForecastTimeStepData data) {
    this.data = data;
  }

  /**
   * The time these forecast values are valid for. Timestamp in format YYYY-MM-DDThh:mm:ssZ (ISO 8601)
   **/
  @ApiModelProperty(required = true, value = "The time these forecast values are valid for. Timestamp in format YYYY-MM-DDThh:mm:ssZ (ISO 8601)")
  public String getTime() {
    return time;
  }
  public void setTime(String time) {
    this.time = time;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ForecastTimeStep forecastTimeStep = (ForecastTimeStep) o;
    return (this.data == null ? forecastTimeStep.data == null : this.data.equals(forecastTimeStep.data)) &&
        (this.time == null ? forecastTimeStep.time == null : this.time.equals(forecastTimeStep.time));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.data == null ? 0: this.data.hashCode());
    result = 31 * result + (this.time == null ? 0: this.time.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class ForecastTimeStep {\n");
    
    sb.append("  data: ").append(data).append("\n");
    sb.append("  time: ").append(time).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
